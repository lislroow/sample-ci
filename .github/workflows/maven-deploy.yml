name: Maven Deploy to Nexus

on:
  push:
    branches: ["main"]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'
          server-id: maven-snapshots
          settings-path: ${{ github.workspace }}
      
      - name: Restore Client Certificate
        run: |
          echo "${{ secrets.CLIENT_CERT_JKS }}" | base64 -d > client-cert.jks
          echo "${{ secrets.CLIENT_CERT_P12 }}" | base64 -d > client-cert.p12
      
      - name: Set up Maven settings.xml
        run: |
          cat <<EOF > settings.xml
          <settings>
            <servers>
              <server>
                <id>maven-releases</id>
                <username>${{ secrets.NEXUS_USERNAME }}</username>
                <password>${{ secrets.NEXUS_PASSWORD }}</password>
              </server>
              <server>
                <id>maven-snapshots</id>
                <username>${{ secrets.NEXUS_USERNAME }}</username>
                <password>${{ secrets.NEXUS_PASSWORD }}</password>
              </server>
            </servers>
          </settings>
          EOF
      
      - name: Build and Deploy with Maven
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          CLIENT_CERT_PASSWORD: ${{ secrets.CLIENT_CERT_PASSWORD }}
        run: |
          mvn clean deploy -DskipTest -s settings.xml \
            -Djavax.net.ssl.keyStore=client-cert.jks \
            -Djavax.net.ssl.keyStorePassword=$CLIENT_CERT_PASSWORD
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Nexus Docker Registry
        run: |
          echo "${{ secrets.NEXUS_PASSWORD }}" | docker login docker.mgkim.net -u "${{ secrets.NEXUS_USERNAME }}" --password-stdin
      
      #- name: Build Docker image
      #  run: |
      #    docker build -t docker.mgkim.net/app/sample-ci:latest .
      #- name: Push Docker image
      #  run: |
      #    docker push docker.mgkim.net/app/sample-ci:latest
      
      - name: Push Docker image (with cache)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: docker.mgkim.net/app/sample-ci:latest
          cache-from: type=registry,ref=docker.mgkim.net/app/sample-ci:cache
          cache-to: type=registry,ref=docker.mgkim.net/app/sample-ci:cache,mode=max
      
      - name: Trigger Jenkins Job
        env:
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
          CLIENT_CERT_PASSWORD: ${{ secrets.CLIENT_CERT_PASSWORD }}
        run: |
          curl -X POST "https://jenkins.mgkim.net/job/deploy-sample-ci/build" \
            --user "$JENKINS_USER:$JENKINS_API_TOKEN" \
            --cert-type p12 \
            --cert "client-cert.p12:$CLIENT_CERT_PASSWORD"
