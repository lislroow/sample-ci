FROM docker.mgkim.net/amazoncorretto:17-alpine-jdk-docker

# internal build
ARG APP_NAME
ARG NEXUS_USERNAME
ARG NEXUS_PASSWORD
ARG CLIENT_CERT_PASSWORD
RUN mkdir -p /root/.m2 && \
  cat > /root/.m2/settings.xml <<EOF
<settings>
  <servers>
    <server>
      <id>maven-releases</id>
      <username>${NEXUS_USERNAME}</username>
      <password>${NEXUS_PASSWORD}</password>
    </server>
    <server>
      <id>maven-snapshots</id>
      <username>${NEXUS_USERNAME}</username>
      <password>${NEXUS_PASSWORD}</password>
    </server>
  </servers>
</settings>
EOF
COPY client-cert.jks /root/.m2

WORKDIR /src
COPY mvnw ./
COPY .mvn ./.mvn
COPY pom.xml ./
COPY src ./src
RUN chmod +x ./mvnw
RUN pwd && ls -l && ls -l ./src/main/java
RUN ./mvnw help:effective-pom
RUN ./mvnw clean deploy -DskipTests -s /root/.m2/settings.xml \
  -Djavax.net.ssl.keyStore=/root/.m2/client-cert.jks \
  -Djavax.net.ssl.keyStorePassword=${CLIENT_CERT_PASSWORD}
RUN echo "APP_NAME=$APP_NAME" && ls -l /src/target
RUN cp -p /src/target/*.jar /app/$APP_NAME.jar

# external build
#WORKDIR /app
#COPY ./target/${APP_NAME}.jar /app

ENTRYPOINT ["/bin/bash", "-c", "\
  java -jar /app/${APP_NAME}.jar"]
